{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","currentTime","setCurrentTime","useEffect","timerId","window","setInterval","console","info","toUTCString","slice","clearInterval","className","App","setClockName","hasClock","setHasClock","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAMaA,EAAyB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvC,EAAsCC,mBAAS,IAAIC,MAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KAcA,OAZAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCJ,EAAe,IAAIF,MAEnBO,QAAQC,MAAK,IAAIR,MAAOS,cAAcC,OAAO,IAAK,MACjD,KAEH,OAAO,WACLL,OAAOM,cAAcP,MAEtB,IAGD,sBAAKQ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCd,IAEhC,YAED,sBAAMc,UAAU,cAAhB,SACGX,EAAYQ,cAAcC,OAAO,IAAK,SClBxC,IAAMG,EAAgB,WAC3B,MAAkCd,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBgB,EAAlB,KACA,EAAgCf,oBAAS,GAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACC,GACxBA,EAAMC,iBACNH,GAAY,IAGRI,EAAkB,WACtBJ,GAAY,IAmBd,OAhBAb,qBAAU,WACRkB,SAASC,iBAAiB,cAAeL,GACzCI,SAASC,iBAAiB,QAASF,GAEnC,IAAMhB,EAAUC,OAAOC,aAAY,WACjCQ,EAxBN,WACE,IAAMS,EAAQvB,KAAKwB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,GAqBCG,MACZ,MAEH,OAAO,WACLrB,OAAOM,cAAcP,GAErBC,OAAOsB,oBAAoB,cAAeV,GAC1CZ,OAAOsB,oBAAoB,QAASP,MAErC,IAGD,sBAAKR,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOjB,UAAWA,QCvCrC8B,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,U","file":"static/js/main.b32a5116.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\nexport const Clock: React.FC<Props> = ({ clockName }) => {\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setCurrentTime(new Date());\n      // eslint-disable-next-line no-console\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      window.clearInterval(timerId);\n    };\n  }, []);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">{clockName}</strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {currentTime.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  const handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    setHasClock(false);\n  };\n\n  const handleLeftClick = () => {\n    setHasClock(true);\n  };\n\n  useEffect(() => {\n    document.addEventListener('contextmenu', handleRightClick);\n    document.addEventListener('click', handleLeftClick);\n\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    return () => {\n      window.clearInterval(timerId);\n\n      window.removeEventListener('contextmenu', handleRightClick);\n      window.removeEventListener('click', handleLeftClick);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      {hasClock && <Clock clockName={clockName} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}